import { BoxDefinition } from './box-dom';
import { d3 } from '../d3service';
export class BoxUtil {
    dataToBoxes(data) {
        if (!data) {
            return [];
        }
        return data.map((v, ix) => {
            const b = this.datumToBox(v);
            b.ix = ix;
            b.key = (ix + 1) + '.';
            return b;
        });
    }
    datumToBox(data) {
        const box = new BoxDefinition();
        if (!data || data.length === 0) {
            return box;
        }
        data = data.sort(d3.ascending);
        box.mean = d3.mean(data);
        box.median = d3.median(data);
        box.fstQnt = d3.quantile(data, 0.25);
        box.thrdQnt = d3.quantile(data, 0.75);
        const iqr = 1.5 * (box.thrdQnt - box.fstQnt);
        box.lowWskr = box.fstQnt - iqr;
        box.highWskr = box.thrdQnt + iqr;
        for (let i = 0; i < data.length; i++) {
            if (data[i] >= box.lowWskr) {
                box.lowWskr = data[i];
                break;
            }
        }
        for (let i = data.length - 1; i >= 0; i--) {
            if (data[i] <= box.highWskr) {
                box.highWskr = data[i];
                break;
            }
        }
        box.outliers = data.filter(v => (v < box.lowWskr || v > box.highWskr));
        return box;
    }
    mockEmptyValues(boxes, missingVal) {
        boxes.forEach(box => {
            if (box.mean === undefined || box.mean === null) {
                box.mean = missingVal;
                box.median = missingVal;
                box.fstQnt = missingVal;
                box.thrdQnt = missingVal;
                box.lowWskr = missingVal;
                box.highWskr = missingVal;
            }
        });
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm94LXV0aWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9iZDItbmd4LWhib3hwbG90L3NyYy9saWIvaGJveC11dGlscy9ib3gtdXRpbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sV0FBVyxDQUFDO0FBQ3hDLE9BQU8sRUFBQyxFQUFFLEVBQUMsTUFBTSxjQUFjLENBQUM7QUFFaEMsTUFBTSxPQUFPLE9BQU87SUFFbEIsV0FBVyxDQUFDLElBQWdCO1FBQzFCLElBQUksQ0FBQyxJQUFJLEVBQUU7WUFDVCxPQUFPLEVBQUUsQ0FBQztTQUNYO1FBR0QsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFO1lBQ3hCLE1BQU0sQ0FBQyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDN0IsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUM7WUFDVixDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQztZQUN2QixPQUFPLENBQUMsQ0FBQztRQUNYLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELFVBQVUsQ0FBQyxJQUFjO1FBRXZCLE1BQU0sR0FBRyxHQUFHLElBQUksYUFBYSxFQUFFLENBQUM7UUFDaEMsSUFBSSxDQUFDLElBQUksSUFBSSxJQUFJLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRTtZQUM5QixPQUFPLEdBQUcsQ0FBQztTQUNaO1FBRUQsSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQy9CLEdBQUcsQ0FBQyxJQUFJLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN6QixHQUFHLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDN0IsR0FBRyxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztRQUNyQyxHQUFHLENBQUMsT0FBTyxHQUFHLEVBQUUsQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBRXRDLE1BQU0sR0FBRyxHQUFHLEdBQUcsR0FBRyxDQUFDLEdBQUcsQ0FBQyxPQUFPLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzdDLEdBQUcsQ0FBQyxPQUFPLEdBQUcsR0FBRyxDQUFDLE1BQU0sR0FBRyxHQUFHLENBQUM7UUFDL0IsR0FBRyxDQUFDLFFBQVEsR0FBRyxHQUFHLENBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQztRQUVqQyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUNwQyxJQUFJLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxHQUFHLENBQUMsT0FBTyxFQUFFO2dCQUMxQixHQUFHLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDdEIsTUFBTTthQUNQO1NBQ0Y7UUFFRCxLQUFLLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDekMsSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksR0FBRyxDQUFDLFFBQVEsRUFBRTtnQkFDM0IsR0FBRyxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ3ZCLE1BQU07YUFDUDtTQUNGO1FBR0QsR0FBRyxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLE9BQU8sSUFBSSxDQUFDLEdBQUcsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7UUFDdkUsT0FBTyxHQUFHLENBQUM7SUFDYixDQUFDO0lBRUQsZUFBZSxDQUFDLEtBQXNCLEVBQUUsVUFBa0I7UUFDeEQsS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBRTtZQUNsQixJQUFJLEdBQUcsQ0FBQyxJQUFJLEtBQUssU0FBUyxJQUFJLEdBQUcsQ0FBQyxJQUFJLEtBQUssSUFBSSxFQUFFO2dCQUMvQyxHQUFHLENBQUMsSUFBSSxHQUFHLFVBQVUsQ0FBQztnQkFDdEIsR0FBRyxDQUFDLE1BQU0sR0FBRyxVQUFVLENBQUM7Z0JBQ3hCLEdBQUcsQ0FBQyxNQUFNLEdBQUcsVUFBVSxDQUFDO2dCQUN4QixHQUFHLENBQUMsT0FBTyxHQUFHLFVBQVUsQ0FBQztnQkFDekIsR0FBRyxDQUFDLE9BQU8sR0FBRyxVQUFVLENBQUM7Z0JBQ3pCLEdBQUcsQ0FBQyxRQUFRLEdBQUcsVUFBVSxDQUFDO2FBQzNCO1FBQ0gsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0JveERlZmluaXRpb259IGZyb20gJy4vYm94LWRvbSc7XG5pbXBvcnQge2QzfSBmcm9tICcuLi9kM3NlcnZpY2UnO1xuXG5leHBvcnQgY2xhc3MgQm94VXRpbCB7XG5cbiAgZGF0YVRvQm94ZXMoZGF0YTogbnVtYmVyW11bXSk6IEJveERlZmluaXRpb25bXSB7XG4gICAgaWYgKCFkYXRhKSB7XG4gICAgICByZXR1cm4gW107XG4gICAgfVxuXG5cbiAgICByZXR1cm4gZGF0YS5tYXAoKHYsIGl4KSA9PiB7XG4gICAgICBjb25zdCBiID0gdGhpcy5kYXR1bVRvQm94KHYpO1xuICAgICAgYi5peCA9IGl4O1xuICAgICAgYi5rZXkgPSAoaXggKyAxKSArICcuJztcbiAgICAgIHJldHVybiBiO1xuICAgIH0pO1xuICB9XG5cbiAgZGF0dW1Ub0JveChkYXRhOiBudW1iZXJbXSk6IEJveERlZmluaXRpb24ge1xuXG4gICAgY29uc3QgYm94ID0gbmV3IEJveERlZmluaXRpb24oKTtcbiAgICBpZiAoIWRhdGEgfHwgZGF0YS5sZW5ndGggPT09IDApIHtcbiAgICAgIHJldHVybiBib3g7XG4gICAgfVxuXG4gICAgZGF0YSA9IGRhdGEuc29ydChkMy5hc2NlbmRpbmcpO1xuICAgIGJveC5tZWFuID0gZDMubWVhbihkYXRhKTtcbiAgICBib3gubWVkaWFuID0gZDMubWVkaWFuKGRhdGEpO1xuICAgIGJveC5mc3RRbnQgPSBkMy5xdWFudGlsZShkYXRhLCAwLjI1KTtcbiAgICBib3gudGhyZFFudCA9IGQzLnF1YW50aWxlKGRhdGEsIDAuNzUpO1xuXG4gICAgY29uc3QgaXFyID0gMS41ICogKGJveC50aHJkUW50IC0gYm94LmZzdFFudCk7XG4gICAgYm94Lmxvd1dza3IgPSBib3guZnN0UW50IC0gaXFyO1xuICAgIGJveC5oaWdoV3NrciA9IGJveC50aHJkUW50ICsgaXFyO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBkYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAoZGF0YVtpXSA+PSBib3gubG93V3Nrcikge1xuICAgICAgICBib3gubG93V3NrciA9IGRhdGFbaV07XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAobGV0IGkgPSBkYXRhLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgICBpZiAoZGF0YVtpXSA8PSBib3guaGlnaFdza3IpIHtcbiAgICAgICAgYm94LmhpZ2hXc2tyID0gZGF0YVtpXTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuXG5cbiAgICBib3gub3V0bGllcnMgPSBkYXRhLmZpbHRlcih2ID0+ICh2IDwgYm94Lmxvd1dza3IgfHwgdiA+IGJveC5oaWdoV3NrcikpO1xuICAgIHJldHVybiBib3g7XG4gIH1cblxuICBtb2NrRW1wdHlWYWx1ZXMoYm94ZXM6IEJveERlZmluaXRpb25bXSwgbWlzc2luZ1ZhbDogbnVtYmVyKSB7XG4gICAgYm94ZXMuZm9yRWFjaChib3ggPT4ge1xuICAgICAgaWYgKGJveC5tZWFuID09PSB1bmRlZmluZWQgfHwgYm94Lm1lYW4gPT09IG51bGwpIHtcbiAgICAgICAgYm94Lm1lYW4gPSBtaXNzaW5nVmFsO1xuICAgICAgICBib3gubWVkaWFuID0gbWlzc2luZ1ZhbDtcbiAgICAgICAgYm94LmZzdFFudCA9IG1pc3NpbmdWYWw7XG4gICAgICAgIGJveC50aHJkUW50ID0gbWlzc2luZ1ZhbDtcbiAgICAgICAgYm94Lmxvd1dza3IgPSBtaXNzaW5nVmFsO1xuICAgICAgICBib3guaGlnaFdza3IgPSBtaXNzaW5nVmFsO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG59XG4iXX0=