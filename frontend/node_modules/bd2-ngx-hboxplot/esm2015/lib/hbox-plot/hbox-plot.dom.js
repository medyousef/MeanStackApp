export class LookAndFeel {
    constructor() {
        this.vMargin = 25;
        this.hMarginL = 20;
        this.hMarginR = 15;
        this.rowWidth = 30;
        this.rowGap = 0.2;
        this.transitionTime = 600;
        this.boxStrokeWidth = '2px';
        this.boxFillOpacity = 0.35;
        this.meanStrokeWidth = '4px';
        this.labelFont = '12px';
        this.labelFillOpacity = 0.35;
        this.backLabelOpacity = 0.30;
        this.backdropColor = 'white';
        this.backdropOpacity = 1;
        this.whiskerStrokeWidth = '1px';
        this.outliersStrokeWidth = '1px';
        this.outliersCircleRadius = 3;
        this.outliersFillOpacity = 0.4;
    }
}
export let defualtLookAndFeel = function () {
    return new LookAndFeel();
};
export class GraphicContext {
    constructor() {
        /*transitionTime: number;
      
         get transitionOn(): boolean {
         return (this.transitionTime && this.transitionTime > 0);
         };*/
        this.labelsTimers = [];
    }
}
export function offsetScaleValue(x, pixOffset, scale) {
    const r = scale.range();
    const pos = scale(x) + pixOffset;
    if (pos < r[0]) {
        return r[0];
    }
    else if (pos > r[1]) {
        return r[1];
    }
    return pos;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGJveC1wbG90LmRvbS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2JkMi1uZ3gtaGJveHBsb3Qvc3JjL2xpYi9oYm94LXBsb3QvaGJveC1wbG90LmRvbS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFNQSxNQUFNLE9BQU8sV0FBVztJQUF4QjtRQUVFLFlBQU8sR0FBRyxFQUFFLENBQUM7UUFDYixhQUFRLEdBQUcsRUFBRSxDQUFDO1FBQ2QsYUFBUSxHQUFHLEVBQUUsQ0FBQztRQUNkLGFBQVEsR0FBRyxFQUFFLENBQUM7UUFDZCxXQUFNLEdBQUcsR0FBRyxDQUFDO1FBRWIsbUJBQWMsR0FBRyxHQUFHLENBQUM7UUFFckIsbUJBQWMsR0FBRyxLQUFLLENBQUM7UUFDdkIsbUJBQWMsR0FBRyxJQUFJLENBQUM7UUFDdEIsb0JBQWUsR0FBRyxLQUFLLENBQUM7UUFFeEIsY0FBUyxHQUFHLE1BQU0sQ0FBQztRQUNuQixxQkFBZ0IsR0FBRyxJQUFJLENBQUM7UUFDeEIscUJBQWdCLEdBQUcsSUFBSSxDQUFDO1FBRXhCLGtCQUFhLEdBQUcsT0FBTyxDQUFDO1FBQ3hCLG9CQUFlLEdBQUcsQ0FBQyxDQUFDO1FBRXBCLHVCQUFrQixHQUFHLEtBQUssQ0FBQztRQUUzQix3QkFBbUIsR0FBRyxLQUFLLENBQUM7UUFDNUIseUJBQW9CLEdBQUcsQ0FBQyxDQUFDO1FBQ3pCLHdCQUFtQixHQUFHLEdBQUcsQ0FBQztJQUM1QixDQUFDO0NBQUE7QUFHRCxNQUFNLENBQUMsSUFBSSxrQkFBa0IsR0FBc0I7SUFDakQsT0FBTyxJQUFJLFdBQVcsRUFBRSxDQUFDO0FBQzNCLENBQUMsQ0FBQztBQUVGLE1BQU0sT0FBTyxjQUFjO0lBQTNCO1FBRUU7Ozs7YUFJSztRQTJCTCxpQkFBWSxHQUFHLEVBQUUsQ0FBQztJQUNwQixDQUFDO0NBQUE7QUFFRCxNQUFNLFVBQVUsZ0JBQWdCLENBQUMsQ0FBUyxFQUFFLFNBQWlCLEVBQUUsS0FBa0M7SUFDL0YsTUFBTSxDQUFDLEdBQUcsS0FBSyxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ3hCLE1BQU0sR0FBRyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxTQUFTLENBQUM7SUFDakMsSUFBSSxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO1FBQ2QsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDYjtTQUFNLElBQUksR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtRQUNyQixPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUNiO0lBQ0QsT0FBTyxHQUFHLENBQUM7QUFDYixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0IHtUcmFuc2l0aW9ufSBmcm9tICdkMy10cmFuc2l0aW9uJztcbmltcG9ydCB7QXhpc30gZnJvbSAnZDMtYXhpcyc7XG5pbXBvcnQge1NjYWxlQmFuZCwgU2NhbGVMaW5lYXJ9IGZyb20gJ2QzLXNjYWxlJztcbmltcG9ydCB7U2VsZWN0aW9uLCBUcmFuc2l0aW9ufSBmcm9tICdkMyc7XG5cblxuZXhwb3J0IGNsYXNzIExvb2tBbmRGZWVsIHtcblxuICB2TWFyZ2luID0gMjU7XG4gIGhNYXJnaW5MID0gMjA7XG4gIGhNYXJnaW5SID0gMTU7XG4gIHJvd1dpZHRoID0gMzA7XG4gIHJvd0dhcCA9IDAuMjtcblxuICB0cmFuc2l0aW9uVGltZSA9IDYwMDtcblxuICBib3hTdHJva2VXaWR0aCA9ICcycHgnO1xuICBib3hGaWxsT3BhY2l0eSA9IDAuMzU7XG4gIG1lYW5TdHJva2VXaWR0aCA9ICc0cHgnO1xuXG4gIGxhYmVsRm9udCA9ICcxMnB4JztcbiAgbGFiZWxGaWxsT3BhY2l0eSA9IDAuMzU7XG4gIGJhY2tMYWJlbE9wYWNpdHkgPSAwLjMwO1xuXG4gIGJhY2tkcm9wQ29sb3IgPSAnd2hpdGUnO1xuICBiYWNrZHJvcE9wYWNpdHkgPSAxO1xuXG4gIHdoaXNrZXJTdHJva2VXaWR0aCA9ICcxcHgnO1xuXG4gIG91dGxpZXJzU3Ryb2tlV2lkdGggPSAnMXB4JztcbiAgb3V0bGllcnNDaXJjbGVSYWRpdXMgPSAzO1xuICBvdXRsaWVyc0ZpbGxPcGFjaXR5ID0gMC40O1xufVxuXG5cbmV4cG9ydCBsZXQgZGVmdWFsdExvb2tBbmRGZWVsOiAoKSA9PiBMb29rQW5kRmVlbCA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gbmV3IExvb2tBbmRGZWVsKCk7XG59O1xuXG5leHBvcnQgY2xhc3MgR3JhcGhpY0NvbnRleHQge1xuXG4gIC8qdHJhbnNpdGlvblRpbWU6IG51bWJlcjtcblxuICAgZ2V0IHRyYW5zaXRpb25PbigpOiBib29sZWFuIHtcbiAgIHJldHVybiAodGhpcy50cmFuc2l0aW9uVGltZSAmJiB0aGlzLnRyYW5zaXRpb25UaW1lID4gMCk7XG4gICB9OyovXG5cbiAgdHJhbnNpdGlvbk9uOiBib29sZWFuO1xuICB0cmFuc2l0aW9uOiBUcmFuc2l0aW9uPGFueSwgYW55LCBhbnksIGFueT47XG5cbiAgd29ya3NwYWNlV2lkdGg6IG51bWJlcjtcbiAgd29ya3NwYWNlSGVpZ2h0OiBudW1iZXI7XG5cbiAgYXhpc1dyYXBwZXI6IFNlbGVjdGlvbjxTVkdHRWxlbWVudCwgYW55LCBudWxsLCB1bmRlZmluZWQ+O1xuICB4U2NhbGU6IFNjYWxlTGluZWFyPG51bWJlciwgbnVtYmVyPjtcbiAgeFRvcEF4aXM6IEF4aXM8bnVtYmVyIHwgeyB2YWx1ZU9mKCk6IG51bWJlciB9PjtcbiAgeEJvdHRvbUF4aXM6IEF4aXM8bnVtYmVyIHwgeyB2YWx1ZU9mKCk6IG51bWJlciB9PjtcblxuICB5U2NhbGU6IFNjYWxlQmFuZDxzdHJpbmc+O1xuICB5TGVmdEF4aXM6IEF4aXM8c3RyaW5nPjtcbiAgeVJpZ2h0QXhpczogQXhpczxzdHJpbmc+O1xuXG4gIHBhbGV0dGU6IHN0cmluZ1tdO1xuXG4gIGRhdGFXcmFwcGVyOiBTZWxlY3Rpb248U1ZHR0VsZW1lbnQsIGFueSwgbnVsbCwgdW5kZWZpbmVkPjtcblxuICB0b29sdGlwV3JhcHBlcjogU2VsZWN0aW9uPFNWR0dFbGVtZW50LCBhbnksIG51bGwsIHVuZGVmaW5lZD47XG4gIHRvb2x0aXBUZXh0OiBTZWxlY3Rpb248U1ZHR0VsZW1lbnQsIGFueSwgbnVsbCwgdW5kZWZpbmVkPjtcbiAgdG9vbHRpcEJveDogU2VsZWN0aW9uPFNWR0dFbGVtZW50LCBhbnksIG51bGwsIHVuZGVmaW5lZD47XG5cbiAgbGFiZWxzV3JhcHBlcjogU2VsZWN0aW9uPFNWR0dFbGVtZW50LCBhbnksIG51bGwsIHVuZGVmaW5lZD47XG4gIGJhY2tMYWJlbHNXcmFwcGVyOiBTZWxlY3Rpb248U1ZHR0VsZW1lbnQsIGFueSwgbnVsbCwgdW5kZWZpbmVkPjtcbiAgbGFiZWxzVGltZXJzID0gW107XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBvZmZzZXRTY2FsZVZhbHVlKHg6IG51bWJlciwgcGl4T2Zmc2V0OiBudW1iZXIsIHNjYWxlOiBTY2FsZUxpbmVhcjxudW1iZXIsIG51bWJlcj4pIHtcbiAgY29uc3QgciA9IHNjYWxlLnJhbmdlKCk7XG4gIGNvbnN0IHBvcyA9IHNjYWxlKHgpICsgcGl4T2Zmc2V0O1xuICBpZiAocG9zIDwgclswXSkge1xuICAgIHJldHVybiByWzBdO1xuICB9IGVsc2UgaWYgKHBvcyA+IHJbMV0pIHtcbiAgICByZXR1cm4gclsxXTtcbiAgfVxuICByZXR1cm4gcG9zO1xufVxuXG5cblxuIl19