{"version":3,"file":"hbox-plot.component.d.ts","sources":["hbox-plot.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit, AfterViewInit, OnChanges, OnDestroy, NgZone, ChangeDetectorRef, ElementRef, SimpleChanges, EventEmitter } from '@angular/core';\r\nimport { Selection } from 'd3';\r\nimport { GraphicContext, LookAndFeel } from './hbox-plot.dom';\r\nimport { BoxDefinition } from '../hbox-utils/box-dom';\r\nexport declare class HBoxPlotComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy {\r\n    private ngZone;\r\n    private changeDetectorRef;\r\n    /**\r\n     * Necessary to control hiding of the element, otherwise the BBoxes are not defined and labels\r\n     * were not rendered in correct places.\r\n     *\r\n     */\r\n    hidden: boolean;\r\n    data: number[][];\r\n    removed: number[];\r\n    domain: number[];\r\n    palette: string[];\r\n    labels: string[];\r\n    labelsOn: string;\r\n    lookAndFeel: LookAndFeel;\r\n    set sorted(sorting: string);\r\n    sortChanged: boolean;\r\n    colors: EventEmitter<string[]>;\r\n    private d3;\r\n    private parentNativeElement;\r\n    private d3Svg;\r\n    private mainPane;\r\n    private graphicContext;\r\n    private boxUtil;\r\n    sortFunction: (b1: BoxDefinition, b2: BoxDefinition) => number;\r\n    constructor(ngZone: NgZone, changeDetectorRef: ChangeDetectorRef, element: ElementRef);\r\n    /**\r\n     * It is detached from angular to prevent unnecessary change detection\r\n     */\r\n    ngAfterViewInit(): void;\r\n    /**\r\n     * Explicit triggers re-drawing as need to have all the parameters set (so will not redrawn if data came frist and domain later)\r\n     * @param changes\r\n     */\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    isDataUpdate(changes: any): boolean;\r\n    initSVG(): void;\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    /**\r\n     * Only for testing\r\n     * @param context\r\n     */\r\n    testGraphicContext(context: GraphicContext): void;\r\n    updatePlot(): void;\r\n    prepareDataModel(data: number[][], removed: number[], labels: string[], palette: string[], domain: number[], sortFunction: (b1: BoxDefinition, b2: BoxDefinition) => number): BoxDefinition[];\r\n    updatePalette(data: any[], palette: string[], graphicContext: GraphicContext): GraphicContext;\r\n    colorBoxes(boxes: BoxDefinition[], palette: string[]): void;\r\n    preparePane(data: any[], lookAndFeel: LookAndFeel, graphicContext: GraphicContext): GraphicContext;\r\n    calculateWorkspaceHeight(data: any[], lookAndFeel: LookAndFeel): number;\r\n    labelBoxes(boxes: BoxDefinition[], labels: string[]): void;\r\n    prepareLabels(boxes: BoxDefinition[], mainPane: Selection<SVGGElement, any, null, undefined>, lookAndFeel: LookAndFeel, graphicContext: GraphicContext, labelsOn: string): GraphicContext;\r\n    prepareTooltip(mainPane: Selection<SVGGElement, any, null, undefined>, graphicContext: GraphicContext): GraphicContext;\r\n    showTooltip(v: number, x: any, y: any): void;\r\n    hideTooltip(): void;\r\n    prepareScales(data: BoxDefinition[], domain: number[], lookAndFeel: LookAndFeel, graphicContext: GraphicContext): GraphicContext;\r\n    plotAxisBox(data: BoxDefinition[], domain: number[], lookAndFeel: LookAndFeel, mainPane: Selection<SVGGElement, any, null, undefined>, graphicContext: GraphicContext): GraphicContext;\r\n    initAxisWrapper(mainPane: Selection<SVGGElement, any, null, undefined>): Selection<SVGGElement, any, null, undefined>;\r\n    plotHorizontalScales(domain: number[], lookAndFeel: LookAndFeel, graphicContext: GraphicContext): GraphicContext;\r\n    plotVerticalScales(data: BoxDefinition[], lookAndFeel: LookAndFeel, graphicContext: GraphicContext): GraphicContext;\r\n    plotDataBoxes(boxes: BoxDefinition[], lookAndFeel: LookAndFeel, mainPane: Selection<SVGGElement, any, null, undefined>, graphicContext: GraphicContext): GraphicContext;\r\n    updateBoxWidgets(boxWidgets: Selection<SVGGElement, BoxDefinition, null, undefined>, lookAndFeel: LookAndFeel, graphicContext: GraphicContext): void;\r\n    positionBackdrop(elm: Selection<SVGGElement, BoxDefinition, null, undefined>, graphicContext: GraphicContext): void;\r\n    positionBoxRectangle(elm: Selection<SVGGElement, BoxDefinition, null, undefined>, graphicContext: GraphicContext): void;\r\n    positionMedianLine(elm: Selection<SVGGElement, BoxDefinition, null, undefined>, graphicContext: GraphicContext): void;\r\n    positionMeanLine(elm: Selection<SVGGElement, BoxDefinition, null, undefined>, graphicContext: GraphicContext): void;\r\n    positionOutlier(elm: Selection<SVGGElement, any, null, undefined>, graphicContext: GraphicContext): void;\r\n    createOutlier(elm: Selection<SVGGElement, any, null, undefined>, lookAndFeel: LookAndFeel, graphicContext: GraphicContext, positionOutlierFunction: (elm: Selection<SVGGElement, any, null, undefined>, graphicContext: GraphicContext) => {}): void;\r\n    positionWhiskerLine(elm: Selection<SVGGElement, BoxDefinition, null, undefined>, left: boolean, graphicContext: GraphicContext): void;\r\n    positionWhiskerTip(elm: Selection<SVGGElement, BoxDefinition, null, undefined>, left: boolean, graphicContext: GraphicContext): void;\r\n    updateWhiskers(whiskers: Selection<SVGGElement, BoxDefinition, null, undefined>, graphicContext: GraphicContext): void;\r\n    createWhiskers(whiskers: Selection<SVGGElement, BoxDefinition, null, undefined>, lookAndFeel: LookAndFeel, graphicContext: GraphicContext): void;\r\n    createBoxes(widgets: Selection<SVGGElement, BoxDefinition, null, undefined>, lookAndFeel: LookAndFeel, graphicContext: GraphicContext): void;\r\n    createBoxWidgets(newBoxWidgets: Selection<SVGGElement, BoxDefinition, null, undefined>, lookAndFeel: LookAndFeel, graphicContext: GraphicContext): void;\r\n}\r\n"]}